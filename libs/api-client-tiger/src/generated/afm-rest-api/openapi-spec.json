{
    "openapi": "3.0.1",
    "info": {
        "title": "OpenAPI definition",
        "version": "v0"
    },
    "servers": [
        {
            "url": "/",
            "description": "GoodData Anywhere endpoint"
        }
    ],
    "paths": {
        "/api/afm": {
            "post": {
                "tags": ["afm-controller"],
                "operationId": "processAfmRequest",
                "parameters": [
                    {
                        "name": "skip-cache",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "timestamp",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AfmExecution"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AfmExecutionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/validObjects": {
            "post": {
                "tags": ["afm-controller"],
                "operationId": "processAfmValidObjectsQuery",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AfmValidObjectsQuery"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AfmValidObjectsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/labelElements": {
            "get": {
                "tags": ["elements-controller"],
                "operationId": "processElementsRequest",
                "parameters": [
                    {
                        "name": "workspace",
                        "in": "query",
                        "description": "Workspace on which to run request.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "label",
                        "in": "query",
                        "description": "Requested label.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Sort order of returned items.\nItems are sorted by ```label``` title.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["ASC", "DESC"],
                            "default": "ASC"
                        }
                    },
                    {
                        "name": "includeTotalWithoutFilters",
                        "in": "query",
                        "description": "Specify if ```totalCountWithoutFilters``` should be returned.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "complementFilter",
                        "in": "query",
                        "description": "Inverse filter:\n* ```false``` - return items matching ```patternFilter```\n* ```true``` - return items not matching ```patternFilter```",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "patternFilter",
                        "in": "query",
                        "description": "Return only items, whose ```label``` title case insensitively contains ```filter``` as substring.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Request page with this offset.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Return only this number of items.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1000
                        }
                    },
                    {
                        "name": "skip-cache",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ElementsResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AFM": {
                "required": ["attributes", "filters", "measures"],
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AttributeItem"
                        }
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FilterDefinition"
                        }
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MeasureItem"
                        }
                    }
                }
            },
            "AfmExecution": {
                "required": ["execution", "project", "resultSpec"],
                "type": "object",
                "properties": {
                    "execution": {
                        "$ref": "#/components/schemas/AFM"
                    },
                    "project": {
                        "type": "string"
                    },
                    "resultSpec": {
                        "$ref": "#/components/schemas/ResultSpec"
                    }
                }
            },
            "ArithmeticMeasureDefinition": {
                "required": ["arithmeticMeasure"],
                "type": "object",
                "properties": {
                    "arithmeticMeasure": {
                        "required": ["measureIdentifiers", "operator"],
                        "type": "object",
                        "properties": {
                            "measureIdentifiers": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/LocalIdentifier"
                                }
                            },
                            "operator": {
                                "type": "string",
                                "enum": ["SUM", "DIFFERENCE", "MULTIPLICATION", "RATIO", "CHANGE"]
                            }
                        }
                    }
                }
            },
            "AttributeItem": {
                "required": ["displayForm", "localIdentifier"],
                "type": "object",
                "properties": {
                    "localIdentifier": {
                        "type": "string"
                    },
                    "displayForm": {
                        "$ref": "#/components/schemas/ObjectIdentifier"
                    },
                    "alias": {
                        "type": "string"
                    }
                }
            },
            "Dimension": {
                "required": ["itemIdentifiers"],
                "type": "object",
                "properties": {
                    "itemIdentifiers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "FilterDefinition": {
                "type": "object",
                "description": "Abstract filter definition type",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/AttributeFilter"
                    },
                    {
                        "$ref": "#/components/schemas/MeasureValueFilter"
                    },
                    {
                        "$ref": "#/components/schemas/DateFilter"
                    },
                    {
                        "$ref": "#/components/schemas/InlineFilterDefinition"
                    }
                ]
            },
            "AttributeFilter": {
                "type": "object",
                "description": "Abstract filter definition type attributes",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/PositiveAttributeFilter"
                    },
                    {
                        "$ref": "#/components/schemas/NegativeAttributeFilter"
                    }
                ]
            },
            "PositiveAttributeFilter": {
                "required": ["positiveAttributeFilter"],
                "type": "object",
                "properties": {
                    "positiveAttributeFilter": {
                        "required": ["displayForm", "in"],
                        "type": "object",
                        "properties": {
                            "displayForm": {
                                "$ref": "#/components/schemas/ObjectIdentifier"
                            },
                            "in": {
                                "$ref": "#/components/schemas/AttributeFilterElements"
                            }
                        }
                    }
                }
            },
            "NegativeAttributeFilter": {
                "required": ["negativeAttributeFilter"],
                "type": "object",
                "properties": {
                    "negativeAttributeFilter": {
                        "required": ["displayForm", "notIn"],
                        "type": "object",
                        "properties": {
                            "displayForm": {
                                "$ref": "#/components/schemas/ObjectIdentifier"
                            },
                            "notIn": {
                                "$ref": "#/components/schemas/AttributeFilterElements"
                            }
                        }
                    }
                }
            },
            "MeasureValueFilter": {
                "type": "object",
                "description": "Abstract filter definition type for measure values",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ComparisonMeasureValueFilter"
                    },
                    {
                        "$ref": "#/components/schemas/RangeMeasureValueFilter"
                    }
                ]
            },
            "ComparisonMeasureValueFilter": {
                "required": ["comparisonMeasureValueFilter"],
                "type": "object",
                "properties": {
                    "comparisonMeasureValueFilter": {
                        "required": ["measure", "operator", "value"],
                        "type": "object",
                        "properties": {
                            "measure": {
                                "$ref": "#/components/schemas/Identifier"
                            },
                            "operator": {
                                "type": "string",
                                "enum": [
                                    "GREATER_THAN",
                                    "GREATER_THAN_OR_EQUAL_TO",
                                    "LESS_THAN",
                                    "LESS_THAN_OR_EQUAL_TO",
                                    "EQUAL_TO",
                                    "NOT_EQUAL_TO"
                                ]
                            },
                            "value": {
                                "type": "number"
                            },
                            "treatNullValuesAs": {
                                "type": "number"
                            }
                        }
                    }
                }
            },
            "RangeMeasureValueFilter": {
                "required": ["rangeMeasureValueFilter"],
                "type": "object",
                "properties": {
                    "rangeMeasureValueFilter": {
                        "required": ["from", "measure", "operator", "to"],
                        "type": "object",
                        "properties": {
                            "measure": {
                                "$ref": "#/components/schemas/Identifier"
                            },
                            "operator": {
                                "type": "string",
                                "enum": ["BETWEEN", "NOT_BETWEEN"]
                            },
                            "from": {
                                "type": "number"
                            },
                            "to": {
                                "type": "number"
                            },
                            "treatNullValuesAs": {
                                "type": "number"
                            }
                        }
                    }
                }
            },
            "DateFilter": {
                "type": "object",
                "description": "Abstract filter definition type for dates",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/AbsoluteDateFilter"
                    },
                    {
                        "$ref": "#/components/schemas/RelativeDateFilter"
                    }
                ]
            },
            "AbsoluteDateFilter": {
                "required": ["absoluteDateFilter"],
                "type": "object",
                "properties": {
                    "absoluteDateFilter": {
                        "required": ["dataset", "from", "to"],
                        "type": "object",
                        "properties": {
                            "dataset": {
                                "$ref": "#/components/schemas/ObjectIdentifier"
                            },
                            "from": {
                                "type": "string",
                                "format": "date"
                            },
                            "to": {
                                "type": "string",
                                "format": "date"
                            }
                        }
                    }
                }
            },
            "RelativeDateFilter": {
                "required": ["relativeDateFilter"],
                "type": "object",
                "properties": {
                    "relativeDateFilter": {
                        "required": ["dataset", "from", "granularity", "to"],
                        "type": "object",
                        "properties": {
                            "dataset": {
                                "$ref": "#/components/schemas/ObjectIdentifier"
                            },
                            "granularity": {
                                "type": "string"
                            },
                            "from": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "to": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                }
            },
            "InlineFilterDefinition": {
                "required": ["inline"],
                "type": "object",
                "properties": {
                    "inline": {
                        "required": ["filter"],
                        "type": "object",
                        "properties": {
                            "filter": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "FilterDefinitionForSimpleMeasure": {
                "type": "object",
                "description": "Abstract filter definition type for simple measure",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DateFilter"
                    },
                    {
                        "$ref": "#/components/schemas/AttributeFilter"
                    }
                ]
            },
            "AttributeFilterElements": {
                "required": ["values"],
                "type": "object",
                "properties": {
                    "values": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "MeasureDefinition": {
                "type": "object",
                "description": "Abstract measure definition type",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/InlineMeasureDefinition"
                    },
                    {
                        "$ref": "#/components/schemas/ArithmeticMeasureDefinition"
                    },
                    {
                        "$ref": "#/components/schemas/SimpleMeasureDefinition"
                    },
                    {
                        "$ref": "#/components/schemas/PopDateMeasureDefinition"
                    },
                    {
                        "$ref": "#/components/schemas/PopDatasetMeasureDefinition"
                    }
                ]
            },
            "MeasureItem": {
                "required": ["definition", "localIdentifier"],
                "type": "object",
                "properties": {
                    "localIdentifier": {
                        "type": "string"
                    },
                    "definition": {
                        "$ref": "#/components/schemas/MeasureDefinition"
                    },
                    "alias": {
                        "type": "string"
                    },
                    "format": {
                        "type": "string"
                    }
                }
            },
            "PopDataset": {
                "required": ["dataset", "periodsAgo"],
                "type": "object",
                "properties": {
                    "dataset": {
                        "$ref": "#/components/schemas/ObjectIdentifier"
                    },
                    "periodsAgo": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "PopDatasetMeasureDefinition": {
                "required": ["previousPeriodMeasure"],
                "type": "object",
                "properties": {
                    "previousPeriodMeasure": {
                        "required": ["dateDatasets", "measureIdentifier"],
                        "type": "object",
                        "properties": {
                            "measureIdentifier": {
                                "$ref": "#/components/schemas/LocalIdentifier"
                            },
                            "dateDatasets": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PopDataset"
                                }
                            }
                        }
                    }
                }
            },
            "PopDate": {
                "required": ["attribute", "periodsAgo"],
                "type": "object",
                "properties": {
                    "attribute": {
                        "$ref": "#/components/schemas/ObjectIdentifier"
                    },
                    "periodsAgo": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "PopDateMeasureDefinition": {
                "required": ["overPeriodMeasure"],
                "type": "object",
                "properties": {
                    "overPeriodMeasure": {
                        "required": ["dateAttributes", "measureIdentifier"],
                        "type": "object",
                        "properties": {
                            "measureIdentifier": {
                                "$ref": "#/components/schemas/LocalIdentifier"
                            },
                            "dateAttributes": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PopDate"
                                }
                            }
                        }
                    }
                }
            },
            "ResultSpec": {
                "required": ["dimensions"],
                "type": "object",
                "properties": {
                    "dimensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Dimension"
                        }
                    }
                }
            },
            "SimpleMeasureDefinition": {
                "required": ["measure"],
                "type": "object",
                "properties": {
                    "measure": {
                        "required": ["item"],
                        "type": "object",
                        "properties": {
                            "item": {
                                "$ref": "#/components/schemas/ObjectIdentifier"
                            },
                            "aggregation": {
                                "type": "string",
                                "enum": ["SUM", "COUNT", "AVG", "MIN", "MAX", "MEDIAN", "RUNSUM"]
                            },
                            "computeRatio": {
                                "type": "boolean"
                            },
                            "filters": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FilterDefinitionForSimpleMeasure"
                                }
                            }
                        }
                    }
                }
            },
            "Identifier": {
                "type": "object",
                "description": "Abstract identifier type",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ObjectIdentifier"
                    },
                    {
                        "$ref": "#/components/schemas/LocalIdentifier"
                    }
                ]
            },
            "ObjectIdentifier": {
                "required": ["identifier"],
                "type": "object",
                "properties": {
                    "identifier": {
                        "required": ["id", "type"],
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "LocalIdentifier": {
                "required": ["localIdentifier"],
                "type": "object",
                "properties": {
                    "localIdentifier": {
                        "type": "string"
                    }
                }
            },
            "InlineMeasureDefinition": {
                "required": ["inline"],
                "type": "object",
                "properties": {
                    "inline": {
                        "required": ["maql"],
                        "type": "object",
                        "properties": {
                            "maql": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "AfmExecutionResponse": {
                "required": ["executionResponse"],
                "type": "object",
                "properties": {
                    "executionResponse": {
                        "$ref": "#/components/schemas/ExecutionResponse"
                    }
                }
            },
            "ExecutionLinks": {
                "required": ["executionResult"],
                "type": "object",
                "properties": {
                    "executionResult": {
                        "type": "string"
                    }
                }
            },
            "ExecutionResponse": {
                "required": ["dimensions", "links"],
                "type": "object",
                "properties": {
                    "dimensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResultDimension"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/ExecutionLinks"
                    }
                }
            },
            "ResultDimension": {
                "required": ["headers"],
                "type": "object",
                "properties": {
                    "headers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResultDimensionHeader"
                        }
                    }
                }
            },
            "ResultDimensionHeader": {
                "type": "object"
            },
            "AfmValidObjectsQuery": {
                "required": ["afm", "types"],
                "type": "object",
                "properties": {
                    "types": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": ["facts", "attributes", "measures", "UNRECOGNIZED"]
                        }
                    },
                    "afm": {
                        "$ref": "#/components/schemas/AFM"
                    }
                }
            },
            "AfmValidObjectsResponse": {
                "required": ["items"],
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Element": {
                "required": ["primaryTitle", "title"],
                "type": "object",
                "properties": {
                    "primaryTitle": {
                        "type": "string",
                        "description": "Title of primary label of attribute owning requested label."
                    },
                    "title": {
                        "type": "string",
                        "description": "Title of requested label."
                    }
                },
                "description": "List of returned elements."
            },
            "ElementsResponse": {
                "required": ["elements", "paging", "primaryLabel"],
                "type": "object",
                "properties": {
                    "primaryLabel": {
                        "type": "string"
                    },
                    "elements": {
                        "type": "array",
                        "description": "List of returned elements.",
                        "items": {
                            "$ref": "#/components/schemas/Element"
                        }
                    },
                    "paging": {
                        "$ref": "#/components/schemas/Paging"
                    },
                    "totalCountWithoutFilters": {
                        "type": "integer",
                        "description": "Total count of items ignoring all filters (using on ```project``` and  ```label``` from request).",
                        "format": "int32"
                    }
                }
            },
            "Paging": {
                "required": ["count", "offset", "total"],
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer",
                        "description": "Count of returnable items ignoring paging.",
                        "format": "int32"
                    },
                    "count": {
                        "type": "integer",
                        "description": "Count of items in this page.",
                        "format": "int32"
                    },
                    "offset": {
                        "type": "integer",
                        "description": "Offset of this page.",
                        "format": "int32"
                    },
                    "next": {
                        "type": "string",
                        "description": "Link to next page, or null if this is last page."
                    }
                },
                "description": "Current page description."
            }
        }
    }
}
