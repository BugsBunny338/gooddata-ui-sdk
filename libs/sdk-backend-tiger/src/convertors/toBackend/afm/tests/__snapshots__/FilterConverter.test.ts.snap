// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tiger filter converter from model to AFM convert absolute date filter should convert absolute date filter from model to AFM with all attributes 1`] = `
Object {
  "absoluteDateFilter": Object {
    "dataset": Object {
      "identifier": Object {
        "id": "closed",
        "type": "dataset",
      },
    },
    "from": "2019-08-06",
    "to": "2019-08-12",
  },
}
`;

exports[`tiger filter converter from model to AFM convert absolute date filter should convert absolute date filter without 'from' attribute 1`] = `null`;

exports[`tiger filter converter from model to AFM convert absolute date filter should convert absolute date filter without 'to' attribute 1`] = `null`;

exports[`tiger filter converter from model to AFM convert measure value filter should convert specified using id of metric 1`] = `
Object {
  "comparisonMeasureValueFilter": Object {
    "measure": Object {
      "identifier": Object {
        "id": "measureId",
        "type": "metric",
      },
    },
    "operator": "GREATER_THAN",
    "treatNullValuesAs": undefined,
    "value": 10,
  },
}
`;

exports[`tiger filter converter from model to AFM convert measure value filter should convert specified using id of metric 2`] = `
Object {
  "comparisonMeasureValueFilter": Object {
    "measure": Object {
      "identifier": Object {
        "id": "factId",
        "type": "fact",
      },
    },
    "operator": "GREATER_THAN",
    "treatNullValuesAs": undefined,
    "value": 10,
  },
}
`;

exports[`tiger filter converter from model to AFM convert measure value filter should convert specified using localId of metric specified as string 1`] = `
Object {
  "comparisonMeasureValueFilter": Object {
    "measure": Object {
      "localIdentifier": "localId",
    },
    "operator": "GREATER_THAN",
    "treatNullValuesAs": undefined,
    "value": 10,
  },
}
`;

exports[`tiger filter converter from model to AFM convert measure value filter should convert specified using localId of metric specified by value 1`] = `
Object {
  "comparisonMeasureValueFilter": Object {
    "measure": Object {
      "localIdentifier": "m_aangOxLSeztu",
    },
    "operator": "GREATER_THAN",
    "treatNullValuesAs": undefined,
    "value": 10,
  },
}
`;

exports[`tiger filter converter from model to AFM convert relative date filter should return AFM relative date filter with date granularity 1`] = `
Object {
  "relativeDateFilter": Object {
    "dataset": Object {
      "identifier": Object {
        "id": "closed",
        "type": "dataset",
      },
    },
    "from": -11,
    "granularity": "day",
    "to": 0,
  },
}
`;

exports[`tiger filter converter from model to AFM convert relative date filter should return AFM relative date filter with missing 'to' parameter 1`] = `
Object {
  "relativeDateFilter": Object {
    "dataset": Object {
      "identifier": Object {
        "id": "closed",
        "type": "dataset",
      },
    },
    "from": 5,
    "granularity": "day",
    "to": NaN,
  },
}
`;

exports[`tiger filter converter from model to AFM convert relative date filter should return AFM relative date filter with mission 'from' parameter 1`] = `null`;

exports[`tiger filter converter from model to AFM convert relative date filter should return AFM relative date filter with month granularity 1`] = `
Object {
  "relativeDateFilter": Object {
    "dataset": Object {
      "identifier": Object {
        "id": "closed",
        "type": "dataset",
      },
    },
    "from": -3,
    "granularity": "month",
    "to": 9,
  },
}
`;

exports[`tiger filter converter from model to AFM convert relative date filter should return AFM relative date filter with quarter granularity 1`] = `
Object {
  "relativeDateFilter": Object {
    "dataset": Object {
      "identifier": Object {
        "id": "closed",
        "type": "dataset",
      },
    },
    "from": 25,
    "granularity": "quarter",
    "to": -2,
  },
}
`;

exports[`tiger filter converter from model to AFM convert relative date filter should return AFM relative date filter with week granularity 1`] = `
Object {
  "relativeDateFilter": Object {
    "dataset": Object {
      "identifier": Object {
        "id": "closed",
        "type": "dataset",
      },
    },
    "from": 50,
    "granularity": "week",
    "to": 100,
  },
}
`;

exports[`tiger filter converter from model to AFM convert relative date filter should return AFM relative date filter with year granularity 1`] = `
Object {
  "relativeDateFilter": Object {
    "dataset": Object {
      "identifier": Object {
        "id": "closed",
        "type": "dataset",
      },
    },
    "from": 2,
    "granularity": "year",
    "to": 7,
  },
}
`;

exports[`tiger filter converter from model to AFM convert visualization object filter should return absolute date filter 1`] = `
Object {
  "absoluteDateFilter": Object {
    "dataset": Object {
      "identifier": Object {
        "id": "closed",
        "type": "dataset",
      },
    },
    "from": "2019-08-06",
    "to": "2019-08-12",
  },
}
`;

exports[`tiger filter converter from model to AFM convert visualization object filter should return comparison measure value filter 1`] = `
Object {
  "comparisonMeasureValueFilter": Object {
    "measure": Object {
      "localIdentifier": "m_acugFHNJgsBy",
    },
    "operator": "GREATER_THAN",
    "treatNullValuesAs": undefined,
    "value": 128,
  },
}
`;

exports[`tiger filter converter from model to AFM convert visualization object filter should return comparison measure value filter with treatNullValueAs 1`] = `
Object {
  "comparisonMeasureValueFilter": Object {
    "measure": Object {
      "localIdentifier": "m_acugFHNJgsBy",
    },
    "operator": "GREATER_THAN",
    "treatNullValuesAs": 0,
    "value": 128,
  },
}
`;

exports[`tiger filter converter from model to AFM convert visualization object filter should return negative attribute filter 1`] = `
Object {
  "negativeAttributeFilter": Object {
    "displayForm": Object {
      "identifier": Object {
        "id": "label.product.id.name",
        "type": "label",
      },
    },
    "notIn": Object {
      "values": Array [
        "other value",
      ],
    },
  },
}
`;

exports[`tiger filter converter from model to AFM convert visualization object filter should return null when filter is empty 1`] = `null`;

exports[`tiger filter converter from model to AFM convert visualization object filter should return positive attribute filter 1`] = `
Object {
  "positiveAttributeFilter": Object {
    "displayForm": Object {
      "identifier": Object {
        "id": "label.product.id.name",
        "type": "label",
      },
    },
    "in": Object {
      "values": Array [
        "value",
      ],
    },
  },
}
`;

exports[`tiger filter converter from model to AFM convert visualization object filter should return range measure value filter 1`] = `
Object {
  "rangeMeasureValueFilter": Object {
    "from": 64,
    "measure": Object {
      "localIdentifier": "m_acugFHNJgsBy",
    },
    "operator": "BETWEEN",
    "to": 128,
    "treatNullValuesAs": undefined,
  },
}
`;

exports[`tiger filter converter from model to AFM convert visualization object filter should return range measure value filter with crossed boundaries 1`] = `
Object {
  "rangeMeasureValueFilter": Object {
    "from": 64,
    "measure": Object {
      "localIdentifier": "m_acugFHNJgsBy",
    },
    "operator": "BETWEEN",
    "to": 128,
    "treatNullValuesAs": undefined,
  },
}
`;

exports[`tiger filter converter from model to AFM convert visualization object filter should return range measure value filter with treatNullValueAs 1`] = `
Object {
  "rangeMeasureValueFilter": Object {
    "from": 64,
    "measure": Object {
      "localIdentifier": "m_acugFHNJgsBy",
    },
    "operator": "BETWEEN",
    "to": 128,
    "treatNullValuesAs": 0,
  },
}
`;

exports[`tiger filter converter from model to AFM convert visualization object filter should return ranking filter 1`] = `
Object {
  "rankingFilter": Object {
    "measures": Array [
      Object {
        "localIdentifier": "m_acugFHNJgsBy",
      },
    ],
    "operator": "BOTTOM",
    "value": 3,
  },
}
`;

exports[`tiger filter converter from model to AFM convert visualization object filter should return ranking filter with attributes 1`] = `
Object {
  "rankingFilter": Object {
    "dimensionality": Array [
      Object {
        "identifier": Object {
          "id": "label.stage.isactive",
          "type": "label",
        },
      },
    ],
    "measures": Array [
      Object {
        "localIdentifier": "m_acugFHNJgsBy",
      },
    ],
    "operator": "TOP",
    "value": 3,
  },
}
`;

exports[`tiger filter converter from model to AFM convert visualization object filter should return relative date filter 1`] = `
Object {
  "relativeDateFilter": Object {
    "dataset": Object {
      "identifier": Object {
        "id": "closed",
        "type": "dataset",
      },
    },
    "from": 20,
    "granularity": "day",
    "to": 30,
  },
}
`;

exports[`tiger filter converter from model to AFM convert visualization object filter should throw an error since tiger database only supports specifying negative attribute elements by value 1`] = `"Tiger backend only allows specifying attribute elements by value"`;

exports[`tiger filter converter from model to AFM convert visualization object filter should throw an error since tiger database only supports specifying positive attribute elements by value 1`] = `"Tiger backend only allows specifying attribute elements by value"`;
