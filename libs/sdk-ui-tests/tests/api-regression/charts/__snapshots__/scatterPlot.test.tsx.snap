// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ScatterPlot with Y axis min/max configuration should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "label.product.id.name",
          "type": "displayForm",
        },
        "localIdentifier": "a_label.product.id.name",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "abZgFKGPaGYM",
                },
              },
            },
            "localIdentifier": "m_abZgFKGPaGYM",
          },
        },
      ],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "label.product.id.name",
              "type": "displayForm",
            },
            "localIdentifier": "a_label.product.id.name",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_label.product.id.name",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "abZgFKGPaGYM",
            },
          },
        },
        "localIdentifier": "m_abZgFKGPaGYM",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with Y axis min/max configuration should create expected props for core chart 1`] = `
Object {
  "config": Object {
    "xaxis": Object {
      "max": "15000000",
      "min": "5000000",
    },
    "yaxis": Object {
      "max": "0.55",
      "min": "0.5",
    },
  },
}
`;

exports[`ScatterPlot with assign color to measures should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "label.product.id.name",
          "type": "displayForm",
        },
        "localIdentifier": "a_label.product.id.name",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "abZgFKGPaGYM",
                },
              },
            },
            "localIdentifier": "m_abZgFKGPaGYM",
          },
        },
      ],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "label.product.id.name",
              "type": "displayForm",
            },
            "localIdentifier": "a_label.product.id.name",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_label.product.id.name",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "abZgFKGPaGYM",
            },
          },
        },
        "localIdentifier": "m_abZgFKGPaGYM",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with assign color to measures should create expected props for core chart 1`] = `
Object {
  "config": Object {
    "colorMapping": Array [
      Object {
        "color": Object {
          "type": "rgb",
          "value": Object {
            "b": 0,
            "g": 0,
            "r": 0,
          },
        },
        "predicate": [Function],
      },
    ],
    "colorPalette": Array [
      Object {
        "fill": Object {
          "b": 73,
          "g": 49,
          "r": 195,
        },
        "guid": "01",
      },
      Object {
        "fill": Object {
          "b": 86,
          "g": 194,
          "r": 168,
        },
        "guid": "02",
      },
      Object {
        "fill": Object {
          "b": 177,
          "g": 217,
          "r": 243,
        },
        "guid": "03",
      },
      Object {
        "fill": Object {
          "b": 121,
          "g": 153,
          "r": 194,
        },
        "guid": "04",
      },
      Object {
        "fill": Object {
          "b": 34,
          "g": 37,
          "r": 162,
        },
        "guid": "05",
      },
    ],
  },
}
`;

exports[`ScatterPlot with axis name configuration - high should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "label.product.id.name",
          "type": "displayForm",
        },
        "localIdentifier": "a_label.product.id.name",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "abZgFKGPaGYM",
                },
              },
            },
            "localIdentifier": "m_abZgFKGPaGYM",
          },
        },
      ],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "label.product.id.name",
              "type": "displayForm",
            },
            "localIdentifier": "a_label.product.id.name",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_label.product.id.name",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "abZgFKGPaGYM",
            },
          },
        },
        "localIdentifier": "m_abZgFKGPaGYM",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with axis name configuration - high should create expected props for core chart 1`] = `
Object {
  "config": Object {
    "secondary_xaxis": Object {
      "name": Object {
        "position": "high",
        "visible": true,
      },
    },
    "secondary_yaxis": Object {
      "name": Object {
        "position": "high",
        "visible": true,
      },
    },
    "xaxis": Object {
      "name": Object {
        "position": "high",
        "visible": true,
      },
    },
    "yaxis": Object {
      "name": Object {
        "position": "high",
        "visible": true,
      },
    },
  },
}
`;

exports[`ScatterPlot with axis name configuration - invisible should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "label.product.id.name",
          "type": "displayForm",
        },
        "localIdentifier": "a_label.product.id.name",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "abZgFKGPaGYM",
                },
              },
            },
            "localIdentifier": "m_abZgFKGPaGYM",
          },
        },
      ],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "label.product.id.name",
              "type": "displayForm",
            },
            "localIdentifier": "a_label.product.id.name",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_label.product.id.name",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "abZgFKGPaGYM",
            },
          },
        },
        "localIdentifier": "m_abZgFKGPaGYM",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with axis name configuration - invisible should create expected props for core chart 1`] = `
Object {
  "config": Object {
    "secondary_xaxis": Object {
      "name": Object {
        "position": "middle",
        "visible": false,
      },
    },
    "secondary_yaxis": Object {
      "name": Object {
        "position": "middle",
        "visible": false,
      },
    },
    "xaxis": Object {
      "name": Object {
        "position": "middle",
        "visible": false,
      },
    },
    "yaxis": Object {
      "name": Object {
        "position": "middle",
        "visible": false,
      },
    },
  },
}
`;

exports[`ScatterPlot with axis name configuration - low should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "label.product.id.name",
          "type": "displayForm",
        },
        "localIdentifier": "a_label.product.id.name",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "abZgFKGPaGYM",
                },
              },
            },
            "localIdentifier": "m_abZgFKGPaGYM",
          },
        },
      ],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "label.product.id.name",
              "type": "displayForm",
            },
            "localIdentifier": "a_label.product.id.name",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_label.product.id.name",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "abZgFKGPaGYM",
            },
          },
        },
        "localIdentifier": "m_abZgFKGPaGYM",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with axis name configuration - low should create expected props for core chart 1`] = `
Object {
  "config": Object {
    "secondary_xaxis": Object {
      "name": Object {
        "position": "low",
        "visible": true,
      },
    },
    "secondary_yaxis": Object {
      "name": Object {
        "position": "low",
        "visible": true,
      },
    },
    "xaxis": Object {
      "name": Object {
        "position": "low",
        "visible": true,
      },
    },
    "yaxis": Object {
      "name": Object {
        "position": "low",
        "visible": true,
      },
    },
  },
}
`;

exports[`ScatterPlot with axis name configuration - middle should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "label.product.id.name",
          "type": "displayForm",
        },
        "localIdentifier": "a_label.product.id.name",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "abZgFKGPaGYM",
                },
              },
            },
            "localIdentifier": "m_abZgFKGPaGYM",
          },
        },
      ],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "label.product.id.name",
              "type": "displayForm",
            },
            "localIdentifier": "a_label.product.id.name",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_label.product.id.name",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "abZgFKGPaGYM",
            },
          },
        },
        "localIdentifier": "m_abZgFKGPaGYM",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with axis name configuration - middle should create expected props for core chart 1`] = `
Object {
  "config": Object {
    "secondary_xaxis": Object {
      "name": Object {
        "position": "middle",
        "visible": true,
      },
    },
    "secondary_yaxis": Object {
      "name": Object {
        "position": "middle",
        "visible": true,
      },
    },
    "xaxis": Object {
      "name": Object {
        "position": "middle",
        "visible": true,
      },
    },
    "yaxis": Object {
      "name": Object {
        "position": "middle",
        "visible": true,
      },
    },
  },
}
`;

exports[`ScatterPlot with coloring - custom colors should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "label.product.id.name",
          "type": "displayForm",
        },
        "localIdentifier": "a_label.product.id.name",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "abZgFKGPaGYM",
                },
              },
            },
            "localIdentifier": "m_abZgFKGPaGYM",
          },
        },
      ],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "label.product.id.name",
              "type": "displayForm",
            },
            "localIdentifier": "a_label.product.id.name",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_label.product.id.name",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "abZgFKGPaGYM",
            },
          },
        },
        "localIdentifier": "m_abZgFKGPaGYM",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with coloring - custom colors should create expected props for core chart 1`] = `
Object {
  "config": Object {
    "colors": Array [
      "rgb(33, 41, 195)",
      "rgb(18, 194, 25)",
      "rgb(243, 56, 47)",
      "rgb(240, 239, 8)",
      "rgb(131, 131, 131)",
    ],
  },
}
`;

exports[`ScatterPlot with coloring - custom palette preferred over colors should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "label.product.id.name",
          "type": "displayForm",
        },
        "localIdentifier": "a_label.product.id.name",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "abZgFKGPaGYM",
                },
              },
            },
            "localIdentifier": "m_abZgFKGPaGYM",
          },
        },
      ],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "label.product.id.name",
              "type": "displayForm",
            },
            "localIdentifier": "a_label.product.id.name",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_label.product.id.name",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "abZgFKGPaGYM",
            },
          },
        },
        "localIdentifier": "m_abZgFKGPaGYM",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with coloring - custom palette preferred over colors should create expected props for core chart 1`] = `
Object {
  "config": Object {
    "colorPalette": Array [
      Object {
        "fill": Object {
          "b": 73,
          "g": 49,
          "r": 195,
        },
        "guid": "01",
      },
      Object {
        "fill": Object {
          "b": 86,
          "g": 194,
          "r": 168,
        },
        "guid": "02",
      },
      Object {
        "fill": Object {
          "b": 177,
          "g": 217,
          "r": 243,
        },
        "guid": "03",
      },
      Object {
        "fill": Object {
          "b": 121,
          "g": 153,
          "r": 194,
        },
        "guid": "04",
      },
      Object {
        "fill": Object {
          "b": 34,
          "g": 37,
          "r": 162,
        },
        "guid": "05",
      },
    ],
    "colors": Array [
      "rgb(33, 41, 195)",
      "rgb(18, 194, 25)",
      "rgb(243, 56, 47)",
      "rgb(240, 239, 8)",
      "rgb(131, 131, 131)",
    ],
  },
}
`;

exports[`ScatterPlot with coloring - custom palette should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "label.product.id.name",
          "type": "displayForm",
        },
        "localIdentifier": "a_label.product.id.name",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "abZgFKGPaGYM",
                },
              },
            },
            "localIdentifier": "m_abZgFKGPaGYM",
          },
        },
      ],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "label.product.id.name",
              "type": "displayForm",
            },
            "localIdentifier": "a_label.product.id.name",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_label.product.id.name",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "abZgFKGPaGYM",
            },
          },
        },
        "localIdentifier": "m_abZgFKGPaGYM",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with coloring - custom palette should create expected props for core chart 1`] = `
Object {
  "config": Object {
    "colorPalette": Array [
      Object {
        "fill": Object {
          "b": 73,
          "g": 49,
          "r": 195,
        },
        "guid": "01",
      },
      Object {
        "fill": Object {
          "b": 86,
          "g": 194,
          "r": 168,
        },
        "guid": "02",
      },
      Object {
        "fill": Object {
          "b": 177,
          "g": 217,
          "r": 243,
        },
        "guid": "03",
      },
      Object {
        "fill": Object {
          "b": 121,
          "g": 153,
          "r": 194,
        },
        "guid": "04",
      },
      Object {
        "fill": Object {
          "b": 34,
          "g": 37,
          "r": 162,
        },
        "guid": "05",
      },
    ],
  },
}
`;

exports[`ScatterPlot with coloring - default should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "label.product.id.name",
          "type": "displayForm",
        },
        "localIdentifier": "a_label.product.id.name",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "abZgFKGPaGYM",
                },
              },
            },
            "localIdentifier": "m_abZgFKGPaGYM",
          },
        },
      ],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "label.product.id.name",
              "type": "displayForm",
            },
            "localIdentifier": "a_label.product.id.name",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_label.product.id.name",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "abZgFKGPaGYM",
            },
          },
        },
        "localIdentifier": "m_abZgFKGPaGYM",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with coloring - default should create expected props for core chart 1`] = `
Object {
  "config": Object {},
}
`;

exports[`ScatterPlot with data labels - auto visibility should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "label.product.id.name",
          "type": "displayForm",
        },
        "localIdentifier": "a_label.product.id.name",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "abZgFKGPaGYM",
                },
              },
            },
            "localIdentifier": "m_abZgFKGPaGYM",
          },
        },
      ],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "label.product.id.name",
              "type": "displayForm",
            },
            "localIdentifier": "a_label.product.id.name",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_label.product.id.name",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "abZgFKGPaGYM",
            },
          },
        },
        "localIdentifier": "m_abZgFKGPaGYM",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with data labels - auto visibility should create expected props for core chart 1`] = `
Object {
  "config": Object {
    "dataLabels": Object {
      "visible": "auto",
    },
  },
}
`;

exports[`ScatterPlot with data labels - default should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "label.product.id.name",
          "type": "displayForm",
        },
        "localIdentifier": "a_label.product.id.name",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "abZgFKGPaGYM",
                },
              },
            },
            "localIdentifier": "m_abZgFKGPaGYM",
          },
        },
      ],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "label.product.id.name",
              "type": "displayForm",
            },
            "localIdentifier": "a_label.product.id.name",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_label.product.id.name",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "abZgFKGPaGYM",
            },
          },
        },
        "localIdentifier": "m_abZgFKGPaGYM",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with data labels - default should create expected props for core chart 1`] = `
Object {
  "config": Object {},
}
`;

exports[`ScatterPlot with data labels - forced hidden should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "label.product.id.name",
          "type": "displayForm",
        },
        "localIdentifier": "a_label.product.id.name",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "abZgFKGPaGYM",
                },
              },
            },
            "localIdentifier": "m_abZgFKGPaGYM",
          },
        },
      ],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "label.product.id.name",
              "type": "displayForm",
            },
            "localIdentifier": "a_label.product.id.name",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_label.product.id.name",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "abZgFKGPaGYM",
            },
          },
        },
        "localIdentifier": "m_abZgFKGPaGYM",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with data labels - forced hidden should create expected props for core chart 1`] = `
Object {
  "config": Object {
    "dataLabels": Object {
      "visible": false,
    },
  },
}
`;

exports[`ScatterPlot with data labels - forced visible and german separators should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "label.product.id.name",
          "type": "displayForm",
        },
        "localIdentifier": "a_label.product.id.name",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "abZgFKGPaGYM",
                },
              },
            },
            "localIdentifier": "m_abZgFKGPaGYM",
          },
        },
      ],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "label.product.id.name",
              "type": "displayForm",
            },
            "localIdentifier": "a_label.product.id.name",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_label.product.id.name",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "abZgFKGPaGYM",
            },
          },
        },
        "localIdentifier": "m_abZgFKGPaGYM",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with data labels - forced visible and german separators should create expected props for core chart 1`] = `
Object {
  "config": Object {
    "dataLabels": Object {
      "visible": true,
    },
    "separators": Object {
      "decimal": ",",
      "thousand": ".",
    },
  },
}
`;

exports[`ScatterPlot with data labels - forced visible should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "label.product.id.name",
          "type": "displayForm",
        },
        "localIdentifier": "a_label.product.id.name",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "abZgFKGPaGYM",
                },
              },
            },
            "localIdentifier": "m_abZgFKGPaGYM",
          },
        },
      ],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "label.product.id.name",
              "type": "displayForm",
            },
            "localIdentifier": "a_label.product.id.name",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_label.product.id.name",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "abZgFKGPaGYM",
            },
          },
        },
        "localIdentifier": "m_abZgFKGPaGYM",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with data labels - forced visible should create expected props for core chart 1`] = `
Object {
  "config": Object {
    "dataLabels": Object {
      "visible": true,
    },
  },
}
`;

exports[`ScatterPlot with x and y axis measures and attribute should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "label.product.id.name",
          "type": "displayForm",
        },
        "localIdentifier": "a_label.product.id.name",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "abZgFKGPaGYM",
                },
              },
            },
            "localIdentifier": "m_abZgFKGPaGYM",
          },
        },
      ],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "label.product.id.name",
              "type": "displayForm",
            },
            "localIdentifier": "a_label.product.id.name",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_label.product.id.name",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "abZgFKGPaGYM",
            },
          },
        },
        "localIdentifier": "m_abZgFKGPaGYM",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with x and y axis measures and attribute should create expected props for core chart 1`] = `Object {}`;

exports[`ScatterPlot with x and y axis measures and attribute with attr sorting should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "label.product.id.name",
          "type": "displayForm",
        },
        "localIdentifier": "a_label.product.id.name",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "abZgFKGPaGYM",
                },
              },
            },
            "localIdentifier": "m_abZgFKGPaGYM",
          },
        },
      ],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "label.product.id.name",
              "type": "displayForm",
            },
            "localIdentifier": "a_label.product.id.name",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_label.product.id.name",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "abZgFKGPaGYM",
            },
          },
        },
        "localIdentifier": "m_abZgFKGPaGYM",
      },
    },
  ],
  "sortBy": Array [
    Object {
      "attributeSortItem": Object {
        "attributeIdentifier": "a_label.product.id.name",
        "direction": "desc",
      },
    },
  ],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with x and y axis measures and attribute with attr sorting should create expected props for core chart 1`] = `Object {}`;

exports[`ScatterPlot with x and y axis measures and attribute with nulls in data should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "closed.aag81lMifn6q",
          "type": "displayForm",
        },
        "localIdentifier": "a_closed.aag81lMifn6q",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "abZgFKGPaGYM",
                },
              },
            },
            "localIdentifier": "m_abZgFKGPaGYM",
          },
        },
      ],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "closed.aag81lMifn6q",
              "type": "displayForm",
            },
            "localIdentifier": "a_closed.aag81lMifn6q",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_closed.aag81lMifn6q",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "abZgFKGPaGYM",
            },
          },
        },
        "localIdentifier": "m_abZgFKGPaGYM",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with x and y axis measures and attribute with nulls in data should create expected props for core chart 1`] = `Object {}`;

exports[`ScatterPlot with x axis measure and attribute should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "label.product.id.name",
          "type": "displayForm",
        },
        "localIdentifier": "a_label.product.id.name",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "label.product.id.name",
              "type": "displayForm",
            },
            "localIdentifier": "a_label.product.id.name",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_label.product.id.name",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with x axis measure and attribute should create expected props for core chart 1`] = `Object {}`;

exports[`ScatterPlot with x axis measure should create expected execution definition 1`] = `
Object {
  "attributes": Array [],
  "buckets": Array [
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with x axis measure should create expected props for core chart 1`] = `Object {}`;

exports[`ScatterPlot with y axis measure and attribute should create expected execution definition 1`] = `
Object {
  "attributes": Array [
    Object {
      "attribute": Object {
        "displayForm": Object {
          "identifier": "label.product.id.name",
          "type": "displayForm",
        },
        "localIdentifier": "a_label.product.id.name",
      },
    },
  ],
  "buckets": Array [
    Object {
      "items": Array [],
      "localIdentifier": "measures",
    },
    Object {
      "items": Array [
        Object {
          "measure": Object {
            "definition": Object {
              "measureDefinition": Object {
                "item": Object {
                  "identifier": "aangOxLSeztu",
                },
              },
            },
            "localIdentifier": "m_aangOxLSeztu",
          },
        },
      ],
      "localIdentifier": "secondary_measures",
    },
    Object {
      "items": Array [
        Object {
          "attribute": Object {
            "displayForm": Object {
              "identifier": "label.product.id.name",
              "type": "displayForm",
            },
            "localIdentifier": "a_label.product.id.name",
          },
        },
      ],
      "localIdentifier": "attribute",
    },
  ],
  "dimensions": Array [
    Object {
      "itemIdentifiers": Array [
        "a_label.product.id.name",
      ],
    },
    Object {
      "itemIdentifiers": Array [
        "measureGroup",
      ],
    },
  ],
  "filters": Array [],
  "measures": Array [
    Object {
      "measure": Object {
        "definition": Object {
          "measureDefinition": Object {
            "item": Object {
              "identifier": "aangOxLSeztu",
            },
          },
        },
        "localIdentifier": "m_aangOxLSeztu",
      },
    },
  ],
  "sortBy": Array [],
  "workspace": "testWorkspace",
}
`;

exports[`ScatterPlot with y axis measure and attribute should create expected props for core chart 1`] = `Object {}`;
