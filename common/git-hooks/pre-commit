#!/bin/sh
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.

PRETTIER_COMMAND="common/temp/node_modules/.bin/pretty-quick"
FIX_COPYRIGHT_COMMAND="common/temp/node_modules/.bin/gdc-fix-copyright"

echo --------------------------------------------
echo Starting Git hook: pre-commit

if [ -f ${PRETTIER_COMMAND} ]; then
  echo Invoking ${PRETTIER_COMMAND}
  ${PRETTIER_COMMAND} --staged
else
  echo Command not installed: ${PRETTIER_COMMAND}
fi

if [ -f ${FIX_COPYRIGHT_COMMAND} ] && command -v npx > /dev/null 2>&1; then
  for FILE in $(exec git diff --cached --name-status | grep -E '^.*\/src\/.*\.(ts|js|ts|jsx|scss)$'  | awk '$1 != "R" { print $2 }'); do
    echo "©️  Fixing copyright header of ${FILE}"
    npx ${FIX_COPYRIGHT_COMMAND} "$FILE"
    git add "$FILE"
  done
  echo '✅ Every copyright header is up-to-date'
else
  echo Command ${FIX_COPYRIGHT_COMMAND} or npx is not installed
fi

echo Finished Git hook: pre-commit
echo --------------------------------------------
